## Copyright 2022 Carol Hsu
## 
## Licensed under the Apache License, Version 2.0 (the "License");
## you may not use this file except in compliance with the License.
## You may obtain a copy of the License at
## 
##     http://www.apache.org/licenses/LICENSE-2.0
## 
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions and
## limitations under the License.

apiVersion: v1
kind: Namespace
metadata:
  name: colibri
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: colibri:system:auth-delegator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:auth-delegator
subjects:
- kind: ServiceAccount
  name: colibri-apiserver
  namespace: colibri
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: colibri-auth-reader
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: extension-apiserver-authentication-reader
subjects:
- kind: ServiceAccount
  name: colibri-apiserver
  namespace: colibri
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: colibri-apiserver
  name: colibri-apiserver
  namespace: colibri
spec:
  replicas: 1
  selector:
    matchLabels:
      app: colibri-apiserver
  template:
    metadata:
      labels:
        app: colibri-apiserver
      name: colibri-apiserver
    spec:
      serviceAccountName: colibri-apiserver
      containers:
      - name: colibri-apiserver
        image: colibri-apiserver:latest
        imagePullPolicy: IfNotPresent
        args:
        - colibri-apiserver
        - --secure-port=6443
        - --logtostderr=true
        - --v=1
        ports:
        - containerPort: 6443
          name: https
        - containerPort: 8080
          name: http
        volumeMounts:
        - mountPath: /tmp
          name: temp-vol
      volumes:
      - name: temp-vol
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: colibri-apiserver
  namespace: colibri
spec:
  ports:
  - name: https
    port: 443
    targetPort: 6443
  - name: http
    port: 80
    targetPort: 8080
  selector:
    app: colibri-apiserver
---
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  name: v1beta1.custom.metrics.k8s.io
spec:
  service:
    name: colibri-apiserver
    namespace: colibri
  group: custom.metrics.k8s.io
  version: v1beta1
  insecureSkipTLSVerify: true
  groupPriorityMinimum: 100
  versionPriority: 100
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: colibri-apiserver
  namespace: colibri
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: colibri-resource-reader
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: colibri-resource-reader
subjects:
- kind: ServiceAccount
  name: colibri-apiserver
  namespace: colibri
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: colibri-resource-reader
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  - pods
  verbs:
  - get
  - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: colibri-job-runner-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: colibri-job-runner
subjects:
- kind: ServiceAccount
  name: colibri-apiserver
  namespace: colibri
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: colibri-job-runner
rules:
- apiGroups:
  - "batch"
  resources:
  - jobs
  verbs:
  - create
---
### For colibri job
kind: ServiceAccount
apiVersion: v1
metadata:
  name: colibri-job
  namespace: colibri
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: colibri-apiserver-post-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: colibri-apiserver-post
subjects:
- kind: ServiceAccount
  name: colibri-job
  namespace: colibri
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: colibri-apiserver-post
rules:
- apiGroups:
  - ""
  resources: ["services/proxy"]
  verbs: ["create"]
#---
#apiVersion: rbac.authorization.k8s.io/v1
#kind: ClusterRole
#metadata:
#  name: colibri-server-resources
#rules:
#- apiGroups:
#  - custom.metrics.k8s.io
#  resources: ["*"]
#  verbs: ["*"]
#---
#apiVersion: rbac.authorization.k8s.io/v1
#kind: ClusterRoleBinding
#metadata:
#  name: hpa-controller-colibri
#roleRef:
#  apiGroup: rbac.authorization.k8s.io
#  kind: ClusterRole
#  name: colibri-server-resources
#subjects:
#- kind: ServiceAccount
#  name: horizontal-pod-autoscaler
#  namespace: kube-system
